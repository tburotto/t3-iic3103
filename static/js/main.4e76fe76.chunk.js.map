{"version":3,"sources":["logo.svg","components/navbar.js","components/stock.js","components/chart.js","components/grid.js","components/cardex.js","components/table.js","components/grid-exchange.js","App.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","IOSSwitch","withStyles","width","height","padding","margin","switchBase","transform","color","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","ButtonAppBar","parentCallback","parentChecked","view","parentView","React","useState","setChecked","className","ThemeProvider","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","FormControl","formControl","Select","id","value","onChange","event","target","MenuItem","FormGroup","FormControlLabel","control","prev","label","minWidth","bullet","display","fontSize","pos","marginBottom","OutlinedCard","stock","changeStock","Card","CardContent","component","company_name","ticker","quote_base","country","CardActions","Button","size","onClick","paper","textAlign","text","Chart","stocks","undefined","Paper","data","labels","pricesx","datasets","pricesy","showLine","blue","fill","options","scales","yAxes","scaleLabel","labelString","xAxes","Grid","container","item","xs","buy","reduce","a","b","sell","max","min","last","delta","CenteredGrid","chosedStock","Object","keys","map","exchange","changeExchange","name","exchange_ticker","address","table","SimpleTable","exchanges","total","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","index","key","scope","align","compra","venta","length","toFixed","chosedExchange","listed_companies","type","styles","toolbarButtons","marginLeft","socket","IO","path","App","state","actualView","prices","callback","bind","callbackView","callbackStock","callbackExchange","this","setState","off","on","time","moment","format","concat","stock_help","volume","forEach","element","emit","result","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e76fe76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { red } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#75ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default function ButtonAppBar({ parentCallback, parentChecked, view, parentView}) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(parentChecked);\n\n  const toggleChecked = () => {\n    setChecked((prev) => !prev);\n    parentCallback(!checked)\n  };\n\n  const changeView = (event) =>{\n    parentView(event.target.value)\n  }\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={theme}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <FormControl className={classes.formControl}>\n              <Select\n                id=\"select-helper\"\n                value={view}\n                onChange={changeView}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value={'Stocks'}>Stocks</MenuItem>\n                <MenuItem value={\"Exchanges\"}>Exchanges</MenuItem>\n              </Select>\n            </FormControl>\n          </Typography>\n          <FormGroup>\n            <FormControlLabel\n              control={<IOSSwitch checked={checked} onChange={toggleChecked} />}\n              label=\"Conexión\"\n            />\n          </FormGroup>\n        </Toolbar>\n      </AppBar>\n      </ThemeProvider>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function OutlinedCard({stock, changeStock}) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {stock.company_name}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {stock.ticker}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {stock.quote_base}\n          <br />\n          {stock.country}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" onClick={()=>{changeStock(stock)}}>Indicadores</Button>\n      </CardActions>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Scatter, Line } from 'react-chartjs-2'\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\nexport default function Chart({ stock, stocks }) {\n    const classes = useStyles();\n    const [data, setData] = useState({})\n   \n    if (stock !== undefined && stocks !== {}) {\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h6\"> {stock.company_name} </Typography>\n                    <Line data={{\n            labels: stocks[stock.ticker].pricesx,\n            datasets: [\n                {\n                    label: \"Precio Accion\",\n                    data: stocks[stock.ticker].pricesy,\n                    backgroundColor: \"blue\",\n                    showLine: true,\n                    color: blue,\n                    fill: false\n                }\n            ],options : {\n                scales: {\n                  yAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Precio (USD)'\n                    }\n                  }],\n                  xAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Fecha y Hora'\n                    }\n                  }],\n                }\n              }\n        }} ></Line>\n        <br/>\n            <Grid container spacing={5}>\n              <Grid item xs={2}>\n            <Typography variant=\"p\"> Volumen Transado (USD): $ {stocks[stock.ticker].buy.reduce((a, b) => a + b, 0)+stocks[stock.ticker].sell.reduce((a, b) => a + b, 0)} </Typography>\n            </Grid>\n            <Grid item xs={2}>\n            <Typography variant=\"p\"> Precio Maximo (USD): $ {stocks[stock.ticker].max} </Typography>\n            </Grid>\n            <Grid item xs={2}>\n            <Typography variant=\"p\"> Precio Minimo (USD): $ {stocks[stock.ticker].min} </Typography>\n            </Grid>\n            <Grid item xs={2}>\n            <Typography variant=\"p\"> Ultimo precio (USD): $ {stocks[stock.ticker].last} </Typography>\n            </Grid>\n            <Grid item xs={2}>\n            <Typography variant=\"p\" color={stocks[stock.ticker].delta < 0 ? \"error\": \"primary\"}> Variación: {stocks[stock.ticker].delta} % </Typography>\n            </Grid>\n            </Grid>\n        </Paper>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n                    Loading\n            </Paper>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Card from './stock'\nimport Chart from './chart'\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function CenteredGrid({stocks, chosedStock, changeStock}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={9}>\n          <Chart stock={chosedStock} stocks={stocks}></Chart>\n          </Grid>\n        <Grid item xs={3}>\n        {Object.keys(stocks).map((value)=>{\n               return <div><Card stock={stocks[value]} changeStock={changeStock}></Card> <br/></div>\n           })}\n        </Grid>\n      </Grid>\n      \n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function OutlinedCard({exchange, changeExchange}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {exchange.name}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {exchange.exchange_ticker}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {exchange.country}\n          <br />\n          {exchange.address}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" onClick={()=>{changeExchange(exchange)}}>Indicadores</Button>\n      </CardActions>\n    </Card>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n\n\n\nexport default function SimpleTable({data, exchange, exchanges, total}) {\n  const classes = useStyles();\n  return (\n      <div>\n    <Typography variant=\"p\"> Compañías </Typography>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell># </TableCell>\n            <TableCell>Compañía</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row, index) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {index+1}\n              </TableCell>\n              <TableCell>{row}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <br/>\n    <Typography align=\"left\" variant=\"p\"> Información </Typography>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell> Volumen Compra </TableCell>\n            <TableCell>Volumen Venta</TableCell>\n            <TableCell>Volumen Total</TableCell>\n            <TableCell>Acciones</TableCell>\n            <TableCell>Participación Mercado</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                {exchanges[exchange.exchange_ticker].compra}\n              </TableCell>\n              <TableCell>{exchanges[exchange.exchange_ticker].venta}</TableCell>\n              <TableCell>{exchanges[exchange.exchange_ticker].venta + exchanges[exchange.exchange_ticker].compra}</TableCell>\n              <TableCell>{data.length}</TableCell>\n              <TableCell>{(((exchanges[exchange.exchange_ticker].venta + exchanges[exchange.exchange_ticker].compra)/total)*100).toFixed(2)}%</TableCell>\n            </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Card from './stock'\nimport Chart from './chart'\nimport Typography from '@material-ui/core/Typography';\nimport CardEx from './cardex'\nimport Table from './table'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function CenteredGrid({exchanges, chosedExchange, changeExchange, total}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={9}>\n        <Paper className={classes.paper}>\n        <Typography variant=\"h3\"> {chosedExchange.name} </Typography>\n        <br/>\n        <Table data={chosedExchange.listed_companies} exchange={chosedExchange} exchanges={exchanges} total={total}></Table>\n        </Paper>\n          </Grid>\n        <Grid item xs={3}>\n        {Object.keys(exchanges).map((value)=>{\n               return <div><CardEx exchange={exchanges[value]} changeExchange={changeExchange}></CardEx> <br/></div>\n           })}\n        </Grid>\n      </Grid>\n      \n    </div>\n  );\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/navbar'\nimport { blue } from '@material-ui/core/colors';\nimport Typography from '@material-ui/core/Typography';\nimport IO from 'socket.io-client'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Grid from './components/grid'\nimport Card from './components/stock'\nimport Chart from './components/chart'\nimport moment from 'moment'\nimport GridEx from './components/grid-exchange'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      light: '#75ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\n\nconst styles = {\n  toolbarButtons: {\n    marginLeft: \"auto\",\n\n  }\n}\n\nconst socket = IO('wss://le-18262636.bitzonte.com', {\n  path: '/stocks'\n\n})\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      checked: true,\n      stocks: [],\n      total: 0,\n      exchanges: {},\n      actualView: 'Stocks',\n      chosedStock: undefined,\n      prices: {},\n      chosedExchange: undefined,\n    }\n    this.callback = this.callback.bind(this);\n    this.callbackView = this.callbackView.bind(this);\n    this.callbackStock = this.callbackStock.bind(this);\n    this.callbackExchange = this.callbackExchange.bind(this);\n  }\n\n  callback(value) {\n    this.setState({ checked: value })\n    if (value === false) {\n      socket.off(\"UPDATE\")\n      socket.off(\"BUY\")\n      socket.off(\"SELL\")\n    }\n    else {\n      socket.on('UPDATE', (data) => {\n        let time = moment(data.time)\n        time = time.format(\"DD/MM/YY HH:mm:ss\")\n        let max = this.state.stocks[data.ticker].max\n        if (data.value > max) {\n          max = data.value\n        }\n        let min = this.state.stocks[data.ticker].min\n        if (data.value < min) {\n          min = data.value\n        }\n        let last = this.state.stocks[data.ticker].last\n        this.setState({\n          stocks: {\n            ...this.state.stocks, [data.ticker]:\n            {\n              ...this.state.stocks[data.ticker], pricesx: this.state.stocks[data.ticker].pricesx.concat([time]),\n              pricesy: this.state.stocks[data.ticker].pricesy.concat([data.value]), last: data.value, max: max, min: min,\n              delta: (((data.value - last) / (last)) * 100).toFixed(2)\n            }\n          }\n        })\n      })\n      socket.on('BUY', (data) => {\n        let stock_help = this.state.stocks[data.ticker]\n        this.setState({total: this.state.total + data.volume})\n        Object.keys(this.state.exchanges).forEach(key =>{\n          this.state.exchanges[key].listed_companies.forEach(element=>{\n            if (element === stock_help.company_name){\n\n              this.setState({\n                exchanges: {\n                  ...this.state.exchanges,\n                  [key]: {\n                    ...this.state.exchanges[key],\n                    compra: this.state.exchanges[key].compra + data.volume\n                  }\n                }\n              })\n            }\n          })\n        })\n        this.setState({\n          stocks: {\n            ...this.state.stocks,\n            [data.ticker]: {\n              ...this.state.stocks[data.ticker], buy: this.state.stocks[data.ticker].buy.concat([data.volume])\n            }\n          }\n        })\n      })\n      socket.on('SELL', (data) => {\n        this.setState({total: this.state.total + data.volume})\n        let stock_help = this.state.stocks[data.ticker]\n        Object.keys(this.state.exchanges).forEach(key =>{\n          this.state.exchanges[key].listed_companies.forEach(element=>{\n            if (element === stock_help.company_name){\n              this.setState({\n                exchanges: {\n                  ...this.state.exchanges,\n                  [key]: {\n                    ...this.state.exchanges[key],\n                    venta: this.state.exchanges[key].venta + data.volume\n                  }\n                }\n              })\n            }\n          })\n        })\n        this.setState({\n          stocks: {\n            ...this.state.stocks,\n            [data.ticker]: {\n              ...this.state.stocks[data.ticker], sell: this.state.stocks[data.ticker].sell.concat([data.volume])\n            }\n          }\n        })\n      })\n\n    }\n  }\n\n  callbackExchange(exchange) {\n    this.setState({ chosedExchange: exchange })\n  }\n\n  callbackView(view) {\n    this.setState({ actualView: view })\n  }\n\n  callbackStock(stock) {\n    this.setState({ chosedStock: stock })\n  }\n  componentWillMount() {\n    if (this.state.checked) {\n      socket.emit('EXCHANGES' /* */)\n      socket.on('EXCHANGES', (data)=>{\n        Object.keys(data).forEach(key =>{\n          data[key][\"compra\"] = 0\n          data[key][\"venta\"] = 0\n        })\n        this.setState({exchanges: data})\n        this.setState({ chosedExchange: this.state.exchanges[Object.keys(this.state.exchanges)[0]]})\n      })\n      socket.emit('STOCKS' /* */)\n      socket.on('STOCKS', (data) => {\n        var result = {}\n        data.forEach(element => {\n          element[\"pricesx\"] = []\n          element[\"pricesy\"] = []\n          element[\"buy\"] = []\n          element[\"sell\"] = []\n          element[\"max\"] = 0\n          element[\"min\"] = 10000\n          element[\"delta\"] = 0\n          element[\"last\"] = 0\n          result[element.ticker] = element\n        });\n        this.setState({ stocks: result })\n        this.setState({ chosedStock: this.state.stocks[Object.keys(this.state.stocks)[0]] })\n        socket.on('UPDATE', (data) => {\n          let time = moment(data.time)\n          time = time.format(\"DD/MM/YY HH:mm:ss\")\n          let max = this.state.stocks[data.ticker].max\n          if (data.value > max) {\n            max = data.value\n          }\n          let min = this.state.stocks[data.ticker].min\n          if (data.value < min) {\n            min = data.value\n          }\n          let last = this.state.stocks[data.ticker].last\n          this.setState({\n            stocks: {\n              ...this.state.stocks, [data.ticker]:\n              {\n                ...this.state.stocks[data.ticker], pricesx: this.state.stocks[data.ticker].pricesx.concat([time]),\n                pricesy: this.state.stocks[data.ticker].pricesy.concat([data.value]), last: data.value, max: max, min: min,\n                delta: (((data.value - last) / (last)) * 100).toFixed(2)\n              }\n            }\n          })\n        })\n        socket.on('BUY', (data) => {\n          let stock_help = this.state.stocks[data.ticker]\n          this.setState({total: this.state.total + data.volume})\n          Object.keys(this.state.exchanges).forEach(key =>{\n            this.state.exchanges[key].listed_companies.forEach(element=>{\n              if (element === stock_help.company_name){\n  \n                this.setState({\n                  exchanges: {\n                    ...this.state.exchanges,\n                    [key]: {\n                      ...this.state.exchanges[key],\n                      compra: this.state.exchanges[key].compra + data.volume\n                    }\n                  }\n                })\n              }\n            })\n          })\n          this.setState({\n            stocks: {\n              ...this.state.stocks,\n              [data.ticker]: {\n                ...this.state.stocks[data.ticker], buy: this.state.stocks[data.ticker].buy.concat([data.volume])\n              }\n            }\n          })\n        })\n        socket.on('SELL', (data) => {\n          this.setState({total: this.state.total + data.volume})\n          let stock_help = this.state.stocks[data.ticker]\n          Object.keys(this.state.exchanges).forEach(key =>{\n            this.state.exchanges[key].listed_companies.forEach(element=>{\n              if (element === stock_help.company_name){\n                this.setState({\n                  exchanges: {\n                    ...this.state.exchanges,\n                    [key]: {\n                      ...this.state.exchanges[key],\n                      venta: this.state.exchanges[key].venta + data.volume\n                    }\n                  }\n                })\n              }\n            })\n          })\n          this.setState({\n            stocks: {\n              ...this.state.stocks,\n              [data.ticker]: {\n                ...this.state.stocks[data.ticker], sell: this.state.stocks[data.ticker].sell.concat([data.volume])\n              }\n            }\n          })\n        })\n      })\n\n    }\n  }\n\n  render() {\n    if (this.state.actualView === \"Stocks\") {\n      return (\n        <div>\n          <ThemeProvider theme={theme}>\n            <Navbar styles={styles} parentCallback={this.callback} parentChecked={this.state.checked} view={this.state.actualView} parentView={this.callbackView} />\n            <br />\n            <Grid stocks={this.state.stocks} chosedStock={this.state.chosedStock} changeStock={this.callbackStock}></Grid>\n          </ThemeProvider>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <ThemeProvider theme={theme}>\n            <Navbar styles={styles} parentCallback={this.callback} parentChecked={this.state.checked} view={this.state.actualView} parentView={this.callbackView} />\n            <br />\n            <GridEx exchanges={this.state.exchanges} chosedExchange={this.state.chosedExchange} changeExchange={this.callbackExchange} total={this.state.total}></GridEx>\n          </ThemeProvider>\n        </div>\n      )\n    }\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}